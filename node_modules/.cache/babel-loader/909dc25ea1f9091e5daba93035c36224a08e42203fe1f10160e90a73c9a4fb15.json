{"ast":null,"code":"var _jsxFileName = \"/Users/larskntl/Documents/GitHub/yukon-club-website/src/Newsletter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Newsletter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Newsletter() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [status, setStatus] = useState('');\n  const [isValid, setIsValid] = useState(true);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateEmail(email)) {\n      setIsValid(false);\n      setStatus('Please enter a valid email address');\n      return;\n    }\n    setIsValid(true);\n    setStatus('Subscribing...');\n    try {\n      const response = await fetch('https://api.example.com/subscribe', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        setStatus('Thank you for subscribing!');\n        setEmail('');\n      } else {\n        setStatus('An error occurred. Please try again.');\n      }\n    } catch (error) {\n      setStatus('An error occurred. Please try again.');\n    }\n  };\n  const validateEmail = email => {\n    const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+[a-zA-Z]{2,}$/;\n    return re.test(String(email).toLowerCase());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newsletter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscribe to our newsletter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Stay updated with our latest news and releases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter your email\",\n          className: !isValid ? 'invalid' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Newsletter, \"g7+ObF1j087MkU8M/4KekMhGLmE=\");\n_c = Newsletter;\nvar _c;\n$RefreshReg$(_c, \"Newsletter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Newsletter","_s","email","setEmail","status","setStatus","isValid","setIsValid","handleSubmit","e","preventDefault","validateEmail","response","fetch","method","headers","body","JSON","stringify","ok","error","re","test","String","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/larskntl/Documents/GitHub/yukon-club-website/src/Newsletter.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Newsletter.css';\n\nexport default function Newsletter() {\n  const [email, setEmail] = useState('');\n  const [status, setStatus] = useState('');\n  const [isValid, setIsValid] = useState(true);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateEmail(email)) {\n      setIsValid(false);\n      setStatus('Please enter a valid email address');\n      return;\n    }\n\n    setIsValid(true);\n    setStatus('Subscribing...');\n\n    try {\n      const response = await fetch('https://api.example.com/subscribe', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      if (response.ok) {\n        setStatus('Thank you for subscribing!');\n        setEmail('');\n      } else {\n        setStatus('An error occurred. Please try again.');\n      }\n    } catch (error) {\n      setStatus('An error occurred. Please try again.');\n    }\n  };\n\n  const validateEmail = (email) => {\n    const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+[a-zA-Z]{2,}$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  return (\n    <div className=\"newsletter-container\">\n      <h2>Subscribe to our newsletter</h2>\n      <p>Stay updated with our latest news and releases</p>\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-group\">\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter your email\"\n            className={!isValid ? 'invalid' : ''}\n          />\n          <button type=\"submit\">Subscribe</button>\n        </div>\n      </form>\n      {status && <p className=\"status-message\">{status}</p>}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACC,aAAa,CAACT,KAAK,CAAC,EAAE;MACzBK,UAAU,CAAC,KAAK,CAAC;MACjBF,SAAS,CAAC,oCAAoC,CAAC;MAC/C;IACF;IAEAE,UAAU,CAAC,IAAI,CAAC;IAChBF,SAAS,CAAC,gBAAgB,CAAC;IAE3B,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEhB;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,IAAIU,QAAQ,CAACO,EAAE,EAAE;QACfd,SAAS,CAAC,4BAA4B,CAAC;QACvCF,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,MAAM;QACLE,SAAS,CAAC,sCAAsC,CAAC;MACnD;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdf,SAAS,CAAC,sCAAsC,CAAC;IACnD;EACF,CAAC;EAED,MAAMM,aAAa,GAAIT,KAAK,IAAK;IAC/B,MAAMmB,EAAE,GAAG,gDAAgD;IAC3D,OAAOA,EAAE,CAACC,IAAI,CAACC,MAAM,CAACrB,KAAK,CAAC,CAACsB,WAAW,CAAC,CAAC,CAAC;EAC7C,CAAC;EAED,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnC3B,OAAA;MAAA2B,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC/B,OAAA;MAAA2B,QAAA,EAAG;IAA8C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACrD/B,OAAA;MAAMgC,QAAQ,EAAEvB,YAAa;MAAAkB,QAAA,eAC3B3B,OAAA;QAAK0B,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B3B,OAAA;UACEiC,IAAI,EAAC,OAAO;UACZC,KAAK,EAAE/B,KAAM;UACbgC,QAAQ,EAAGzB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;UAC1CG,WAAW,EAAC,kBAAkB;UAC9BX,SAAS,EAAE,CAACnB,OAAO,GAAG,SAAS,GAAG;QAAG;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACF/B,OAAA;UAAQiC,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACN1B,MAAM,iBAAIL,OAAA;MAAG0B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAEtB;IAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAAC7B,EAAA,CA7DuBD,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}